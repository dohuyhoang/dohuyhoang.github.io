<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>A Cloudy Blog</title>
		<description></description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>Introduction to OpenCloud</title>
				<description>&lt;p&gt;The &lt;strong&gt;Cloud&lt;/strong&gt; is one of the most popular term on Internet nowadays. Cloud computing is widely adopted by all scaled enterprises. By wikipedia definition, cloud computing is computing that involves a large number of computers connected through a communication network such as the Internet, similar to utility computing. In science, cloud computing is a synonym for distributed computing over a network, and means the ability to run a program or application on many connected computers at the same time.  &lt;/p&gt;

&lt;p&gt;Infrastructure as a Service (IaaS) is one of the three fundamental services of cloud computing. It aims for providing a hardware infrastructure, including the virtual servers, network connections, IP address, storage hardwares, etc. or a pool of resources. This resource pool can be scale easily later. &lt;/p&gt;

&lt;p&gt;One well-known example of IaaS provider is Amazon Web Service (AWS). They provide users scalable clusters with unlimited VMs. Users don&amp;#39;t care about networking or hardwares below. Users can add more storage space, CPU, RAM for their VMs anytime. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/CloudStack.gif&quot; alt=&quot;CloudStack&quot; title=&quot;Stack of three fundamental services&quot;&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/CloudStackDetail.png&quot; alt=&quot;CloudStackDetail&quot; title=&quot;Detail of three services&quot;&gt;&lt;/p&gt;

&lt;p&gt;AWS is considered public cloud. Amazon controls the hardware, and all users share that resource pool. All users&amp;#39; data is stored on Amazon&amp;#39;s hardware property. That create the fear of vendor lock-in - a day when the IaaS refuse to serve and claim all data on their servers. That gives birth for the &lt;strong&gt;Private Cloud&lt;/strong&gt; trend - the cloud that runs on enterprise&amp;#39;s own hardware. On the market, there are plenty of Open Source and commercial product that help building private cloud:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenStack&lt;/li&gt;
&lt;li&gt;CloudStack&lt;/li&gt;
&lt;li&gt;Eucalyptus&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;They are all open source. Among them, OpenStack is having the momentum. They have largest community, as well as supported by many companies: HP, IBM, Rackspace, NASA, Mirantis, etc.    &lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Cloud-computing&quot;&gt;http://en.wikipedia.org/wiki/Cloud-computing&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Tue, 22 Apr 2014 18:00:00 +0200</pubDate>
				<link>/opencloud/cloud/openstack/cloudstack/iaas/2014/04/22/OpenCloud.html</link>
				<guid isPermaLink="true">/opencloud/cloud/openstack/cloudstack/iaas/2014/04/22/OpenCloud.html</guid>
			</item>
		
			<item>
				<title>Inversion of Control</title>
				<description></description>
				<pubDate>Tue, 22 Apr 2014 18:00:00 +0200</pubDate>
				<link>/software/design/java/2014/04/22/IoC.html</link>
				<guid isPermaLink="true">/software/design/java/2014/04/22/IoC.html</guid>
			</item>
		
			<item>
				<title>What is DevOps.</title>
				<description>&lt;p&gt;I&amp;#39;m not an expert in DevOps myself. This blog is merely a digest note from my reading and very little experience. I&amp;#39;m intending to update it when I gain more experience or from your help. &lt;/p&gt;

&lt;h1&gt;What is DevOps&lt;/h1&gt;

&lt;p&gt;DevOps stands for Development and Operations. First of all, it&amp;#39;s an &amp;quot;another&amp;quot; software development methodology. Of course, as other siblings, this methodology is created to solve some problem in software world. &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://upload.wikimedia.org/wikipedia/commons/b/b5/Devops.svg&quot; alt=&quot;Wiki&quot;&gt;&lt;/p&gt;

&lt;h2&gt;The problem&lt;/h2&gt;

&lt;p&gt;Simply speaking, development guys and operations guys are enemy of each other. Development means to change and evolve. While operations need stability. Some statistic numbers: 80% downtime is due to changes. 47% of total time dedicated to deployment.&lt;/p&gt;

&lt;p&gt;But of course we need development. The problem is the misunderstanding between Dev and Ops, that we call &lt;strong&gt;The wall of Confusion&lt;/strong&gt;. To add fuel into the fire, many global companies have Dev team in Vietnam and Ops team in Europe. Geometry distance will enlarge the wall. &lt;/p&gt;

&lt;p&gt;The worst day is &lt;strong&gt;release/deployment&lt;/strong&gt; day, when changes are pushed from Dev team to Ops team. The most typical problem is the differences in environment between Dev and Ops. The Ops team has to hack the product, modify all configuration files. And when they give up, changes will be rolled back in Ops, bugs are reported to Devs, and Dev guys will say f**k  &lt;/p&gt;

&lt;h2&gt;The solution&lt;/h2&gt;

&lt;p&gt;DevOps focuses on communication. Cooperation between Dev and Ops must start before and continues long after release/deployment. &lt;/p&gt;

&lt;p&gt;We should also considering the voices again DevOps. I read &lt;a href=&quot;http://jeffknupp.com/blog/2014/04/15/how-devops-is-killing-the-developer/&quot;&gt;an article&lt;/a&gt; of Jeff Knupp, and I think his point of view is interesting (not that I agree). He complained force a developer to handle tasks of QA, sysadmin, analyst. That&amp;#39;s the birth of &amp;quot;full-stack&amp;quot; developer, and some traditional dev who only love programming will feel annoyed (not in my case definitely). &lt;/p&gt;

&lt;p&gt;Not so convinced?&lt;/p&gt;

&lt;h2&gt;Which companies used DevOps&lt;/h2&gt;

&lt;p&gt;All of software companies can use it, of course. 
But the one who need it the most is the companies with very frequent releases. For example, Flickr with 10 deployments per day. Facebook with 1 deployment each day. Amazon with a deployment per 11 seconds.   &lt;/p&gt;

&lt;h2&gt;Ok I&amp;#39;ll use DevOps, but how to use?&lt;/h2&gt;

&lt;p&gt;As mentioned above, DevOps is a methodology. That means you need tools, training, changes in approach, changes in culture, etc. to adopt it. The following is just some tips based on my experience to help. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Chef&lt;/strong&gt;: with chef, you write the code to configure the infrastructure (infrastructure as a code). The good point is you don&amp;#39;t have to worry about the different in env between Dev and Ops. You can check this &lt;a href=&quot;http://www.slideshare.net/JulianDunn/chef-introduction-princeton-meetup&quot;&gt;slide&lt;/a&gt; for more info.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Docker&lt;/strong&gt;: provide a unique sandbox environment for apps. It&amp;#39;s quite popular now, and is a competitor of Chef.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;The culture&lt;/strong&gt;: train dev with QA, sysadmin roles. Train sysadmin how to program. Build a team with both of them.  &lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Deploying&lt;/strong&gt;: deploy frequently. A deploy with smaller code changes is better than an upgrade with hundred files changes. &lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This &lt;a href=&quot;http://www.slideshare.net/OCTOTechnology/introduction-to-devops-28779951&quot;&gt;slides&lt;/a&gt; provides plenty good examples. &lt;/p&gt;

&lt;p&gt;Now it&amp;#39;s your turn to help. Please sharing your own experience using DevOps. &lt;/p&gt;
</description>
				<pubDate>Tue, 22 Apr 2014 16:00:00 +0200</pubDate>
				<link>/devops/2014/04/22/What-is-DevOpswq.html</link>
				<guid isPermaLink="true">/devops/2014/04/22/What-is-DevOpswq.html</guid>
			</item>
		
			<item>
				<title>What is Cloud. Why do we need it.</title>
				<description>&lt;p&gt;Today, one of my collegue ask me a very interesting question: &amp;quot;What is Cloud?&amp;quot; I was stunned a very long minute. It&amp;#39;s true that I don&amp;#39;t know the answer. Then I ask him back &amp;quot;What do you think Cloud is?&amp;quot;. That&amp;#39;s a start of a very interesting conversation. &lt;/p&gt;
</description>
				<pubDate>Fri, 18 Apr 2014 12:00:00 +0200</pubDate>
				<link>/opencloud/openstack/cloudstack/vmware/2014/04/18/What-is-Cloud-Why-we-need-it.html</link>
				<guid isPermaLink="true">/opencloud/openstack/cloudstack/vmware/2014/04/18/What-is-Cloud-Why-we-need-it.html</guid>
			</item>
		
			<item>
				<title>Which OpenCloud I choose? OpenStack, CloudStack or VMware</title>
				<description>&lt;p&gt;In recent years, we can observer a rapid advance of cloud IaaS technology. In the past, only VMware made its name and widely used in DC management. Then the rise of AWS make a huge impact on the industry. To fight again the Godzilla EC2, and with the needs of private cloud, latecomers enterprises and communities join force to create different OpenSource IaaS platform:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Eucalyptus: a second broadest community and an official partner with AWS.&lt;/li&gt;
&lt;li&gt;CloudStack: a most completed product, used to be an closed software belong to Citrix. They decide to contribute source code to Apache to join the race. Small but well-tested. &lt;/li&gt;
&lt;li&gt;OpenNebula: with smallest community. &lt;/li&gt;
&lt;li&gt;OpenStack: with broadest community, back by giants, and illimited pocket of money. &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All of them joined a fierce stack war. I can&amp;#39;t say which of them will win, but we will focus on the leading group: CloudStack - a number one in term of industry deploying, OpenStack - a number one in term of community and supports, and VMware - an ancient giant. &lt;/p&gt;

&lt;h1&gt;OpenCloud vs VMware&lt;/h1&gt;

&lt;p&gt;The most traditional technology for DC virtualization is VMware vCenter. Why I called it &lt;em&gt;traditional&lt;/em&gt;. Because this tool has been developed for a long time, and was adopted by many legacy systems. However, we hardly called it Cloud technology. I have a honor to consult Mr. Thierry Carrez - OpenStack release manager. He gave me an answer that I found the most correct:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Traditional workloads run on servers that are like pets. They are
unique, you care for them, heal them when they are hurt, have HA in
place to make sure they survive etc.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Cloud servers are like cattle. They are generic, are set up
automatically using automation, and when they exhibit signs of failure
you shoot them.&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;If your goal is to virtualize traditional workloads, you may find VMWare
offering more attractive, with nice HA / live migration features to
ensure the survival of your hand-crafted servers.&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;If your goal is more to heavily use automation, develops style deployments
and Amazon AWS like services, then OpenStack is the way to go.&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://www.slideshare.net/randybias/pets-vs-cattle-the-elastic-cloud-story&quot;&gt;Pet and cattle analogy&lt;/a&gt;&lt;/p&gt;

&lt;h1&gt;Why not CloudStack?&lt;/h1&gt;

&lt;p&gt;CloudStack is the top competitor of OpenStack in OpenCloud market now.&lt;/p&gt;

&lt;p&gt;CloudStack is obvious much product oriented. I think &lt;strong&gt;OpenStack and CloudStack&lt;/strong&gt; is similar to &lt;strong&gt;Windows vs Linux kernel&lt;/strong&gt;. &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Although CloudStack is open-source, but recently report, Citrix contributes more than 50% to the project. &lt;/li&gt;
&lt;li&gt;While OpenStack has Rackspace, IBM, HP, Redhat, Mirantis are top contributors, and dozen of companies contributes tiny parts. In addition, each platinum contributer has their own product-tested version based on core OpenStack.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;OpenStack&lt;/h1&gt;

&lt;p&gt;The concept is similar to Linux kernel and Linux distro: OpenStack is a framework (Linux kernel). Some of the companies in that ecosystem package the solution so that it&amp;#39;s ready to use (Linux distro):&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Rackspace Private Cloud (Rackspace)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;Linux distributions like Red Hat or Ubuntu (Canonical) have offerings OpenStack package.&lt;/li&gt;
&lt;li&gt;ENovance (France/Canada) &lt;/li&gt;
&lt;li&gt;Cloudscaling (US) &lt;/li&gt;
&lt;li&gt;Mirantis (US/Russia)&lt;/li&gt;
&lt;li&gt;IBM (commercial version)&lt;/li&gt;
&lt;/ul&gt;

&lt;h1&gt;Rackspace Private Cloud&lt;/h1&gt;

&lt;p&gt;Rackspace Private Cloud is an OpenStack configuration that has been developed, tested, and packaged by Rackspace OpenStack specialists. Offering that is easy to install, with a configuration that comes from our expertise in developing OpenStack clouds for our customers.&lt;/p&gt;

&lt;h4&gt;Strength&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Easy to install.&lt;/li&gt;
&lt;li&gt;Well documented.&lt;/li&gt;
&lt;li&gt;One deployment design (designed HA, networking, etc).&lt;/li&gt;
&lt;li&gt;Based on latest release version of OpenStack (Havana)&lt;/li&gt;
&lt;li&gt;Using Chef cookbook.&lt;/li&gt;
&lt;li&gt;Central forum for discussion. Fast (free) support. &lt;/li&gt;
&lt;li&gt;Rackspace is the company contributed the most for OpenStack recently.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4&gt;Weakness&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Not flexible (must follow Rackspace deployment design).&lt;/li&gt;
&lt;li&gt;Use latest OpenStack release version, not development version.&lt;/li&gt;
&lt;li&gt;Lack of OpenStack new features (incubating projects). Not sure can we add them manually. &lt;/li&gt;
&lt;li&gt;Not sure OpenStack third parties extension can work.&lt;/li&gt;
&lt;/ul&gt;
</description>
				<pubDate>Tue, 15 Apr 2014 17:52:47 +0200</pubDate>
				<link>/opencloud/openstack/cloudstack/vmware/2014/04/15/Which-OpenCloud-I-choose.html</link>
				<guid isPermaLink="true">/opencloud/openstack/cloudstack/vmware/2014/04/15/Which-OpenCloud-I-choose.html</guid>
			</item>
		
			<item>
				<title>Introduce Rackspace Private Cloud Networking</title>
				<description>&lt;h1&gt;Rackspace Private Cloud networking&lt;/h1&gt;

&lt;h2&gt;OpenStack networking concepts&lt;/h2&gt;

&lt;p&gt;In OpenStack neutron, there are two types of networks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Provider network&lt;/strong&gt;: simply speaking, it is a physical network inside (or between) your DCs. This network is shared between tenants. There are two way of config this network:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Flat (untagged)&lt;/li&gt;
&lt;li&gt;VLAN (tagged)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Tenant network&lt;/strong&gt;: or virtual network inside connect each tenant. Of course, it is not shared between 2 tenant. However, two tenant network may connect to each other using a Neutron virtual router + L3 (Layer 3) agent. This type of network may be configed using: &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;vlan (tagged)&lt;/li&gt;
&lt;li&gt;gre (unique id)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Network design&lt;/h2&gt;

&lt;h3&gt;Flat network&lt;/h3&gt;

&lt;p&gt;Most basic design. Physical network resides in the same broadcast domain.&lt;/p&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://www.rackspace.com/knowledge_center/article/about-rackspace-private-cloud&quot;&gt;Rackspace knowledge center&lt;/a&gt; for more information&lt;/p&gt;
</description>
				<pubDate>Tue, 15 Apr 2014 15:52:47 +0200</pubDate>
				<link>/openstack/rackspace/opencloud/networking/2014/04/15/Rackspace-private-cloud-networking.html</link>
				<guid isPermaLink="true">/openstack/rackspace/opencloud/networking/2014/04/15/Rackspace-private-cloud-networking.html</guid>
			</item>
		
			<item>
				<title>My Rackspace chef environment</title>
				<description>&lt;p&gt;This is a note of how I change Rackspace Private Cloud (RPC) chef&amp;#39;s environment before bootstrap own nodes.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;MDI-private-cloud&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mobile Device - Rackspace Private Cloud v4.2.2&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;cookbook_versions&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;json_class&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Chef::Environment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;chef_type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;environment&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;default_attributes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;quot;override_attributes&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;quot;custom_template_banner&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Mobile Devices Ingenierie Cloud&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;quot;developer_mode&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
     &lt;span class=&quot;nt&quot;&gt;&amp;quot;enable_testing_repos&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;nova&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;network&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;quot;provider&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;neutron&amp;quot;&lt;/span&gt;
            &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;neutron&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;ovs&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;nt&quot;&gt;&amp;quot;external_bridge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                &lt;span class=&quot;nt&quot;&gt;&amp;quot;provider_networks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
                  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                     &lt;span class=&quot;nt&quot;&gt;&amp;quot;label&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;ph-eth0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;nt&quot;&gt;&amp;quot;bridge&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;br-eth0&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                     &lt;span class=&quot;nt&quot;&gt;&amp;quot;vlans&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;1:1&amp;quot;&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
             &lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
             &lt;span class=&quot;nt&quot;&gt;&amp;quot;network_type&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;gre&amp;quot;&lt;/span&gt;
         &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;mysql&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;allow_remote_root&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;root_network_acl&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;%&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;quot;osops_networks&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;nova&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.0/24&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;public&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.0/24&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
         &lt;span class=&quot;nt&quot;&gt;&amp;quot;management&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;192.168.1.0/24&amp;quot;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
</description>
				<pubDate>Tue, 15 Apr 2014 15:52:47 +0200</pubDate>
				<link>/openstack/chef/rackspace/2014/04/15/Rackspace-chef-environment.html</link>
				<guid isPermaLink="true">/openstack/chef/rackspace/2014/04/15/Rackspace-chef-environment.html</guid>
			</item>
		
			<item>
				<title>OpenStack networking designs notes</title>
				<description>&lt;h1&gt;OpenStack networking designs&lt;/h1&gt;

&lt;p&gt;Based on this &lt;a href=&quot;http://www.slideshare.net/lowescott/an-introduction-to-openstack-networking&quot;&gt;slice&lt;/a&gt; of Scott Lowe and my testing results.&lt;/p&gt;

&lt;h2&gt;What should we know about OpenStack networking&lt;/h2&gt;

&lt;p&gt;There are two types of network in OpenStack Neutron:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Provider network&lt;/strong&gt;: or physical network inside/between DCs. Possible designs:

&lt;ul&gt;
&lt;li&gt;Flat (untagged): all hosts in the same network domain.&lt;/li&gt;
&lt;li&gt;VLAN (tagged): separate physical broadcast domain by using tagged switch.&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Tenant network&lt;/strong&gt;: logical network between VMs. Both methods below support separated network.

&lt;ul&gt;
&lt;li&gt;GRE (unique id)&lt;/li&gt;
&lt;li&gt;VLAN (tagged)
At least one Provider network must be configured.&lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;http://developer.rackspace.com/blog/neutron-networking-the-building-blocks-of-an-openstack-cloud.html&quot;&gt;Network concepts&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;Deployment models&lt;/h2&gt;

&lt;h3&gt;Flat network&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;How:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The most simple deployment.&lt;/li&gt;
&lt;li&gt;Use only one provider network. &lt;/li&gt;
&lt;li&gt;Don&amp;#39;t use any tenant network at all. All tenants share an IP pool.&lt;/li&gt;
&lt;li&gt;VMs get IPs directly from provider network.&lt;/li&gt;
&lt;li&gt;No need any neutron function.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Simple, can use for testing&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;One broadcast domain. &lt;/li&gt;
&lt;li&gt;Sniffing packets of other tenants.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Multiple flat network&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;How:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Use VLAN (need physical switch support) to separate Provider networks.&lt;/li&gt;
&lt;li&gt;Multiple providers networks&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Note:&lt;/strong&gt; one VM can lay on two VLAN by configuring two IPs for it.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Network separation between tenant. Congrat!&lt;/li&gt;
&lt;li&gt;Multiple broadcast domains&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Need hardware configuration (Switch)&lt;/li&gt;
&lt;li&gt;Scaling needs configuring HW (create new VLAN)&lt;/li&gt;
&lt;li&gt;Creating new tenant networks needs configuring HW (omg T.T)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Mixed flat and private network&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;How:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Based on one flat network model: one provider network.&lt;/li&gt;
&lt;li&gt;Don&amp;#39;t use Neutron router. &lt;/li&gt;
&lt;li&gt;Each VM has private IP.&lt;/li&gt;
&lt;li&gt;Traffic is encapsulate for tenant network communication. Ensure the security, but the broadcast domain is not separated.&lt;/li&gt;
&lt;li&gt;They may use some Linux Bridge/IPSec technologies, I&amp;#39;m not sure.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;One Neutron router in front of private (tenant) networks&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;How:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Based on Mixed flat and private network, no use physical switch (physical VLAN)&lt;/li&gt;
&lt;li&gt;Put a Neutron router (virtual router) in front of private networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separate traffic between tenants&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Bad:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Each tenant has one private network. &lt;/li&gt;
&lt;li&gt;Tenant may create two private networks, but there traffic is not separated.&lt;/li&gt;
&lt;li&gt;Now we separate the term tenant and private network: one tenant in OpenStack equivalent with a project. One project may need more than one users working on. So each tenant may need several private networks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3&gt;Each tenant has one Neutron router&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;How:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;The headline already describes it&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Good:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Separate traffic between tenants&lt;/li&gt;
&lt;li&gt;Separate traffic between private network inside tenants&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Ugly:&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Don&amp;#39;t know yet, I&amp;#39;m on the way of testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Nova-network vs Neutron network&lt;/h2&gt;

&lt;p&gt;Among all networking models above, nova-network only support the two first: flat and multiple-flat (VLAN). Obviously, it can&amp;#39;t support any models with &lt;code&gt;neutron&lt;/code&gt; name inside. If we choose to use nova-network, be ready to face scaling problem later. In addition, it won&amp;#39;t support plugin-in mechadism to use third parties solutions. I don&amp;#39;t recommend to use it unless you want to do a school project and want to save time to play video game. &lt;/p&gt;

&lt;p&gt;With Neutron, you have full network virtualization solution. The network is decoupled with hardware. Neutron uses an open-source product that&amp;#39;s called Open vSwitch. When configuring Neutron, you will usually see the term OVS.   &lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/media/neutron1.jpg&quot; alt=&quot;OVS&quot; title=&quot;http://www.slideshare.net/yfauser/open-stack-networking101part1&quot;&gt;&lt;/p&gt;

&lt;p&gt;Note that Neutron uses plugin mechanism. That means neutron itself only define the services - L2 network abstraction - then the plugins will provides the implementation. Third parties plugins may provides some extend functions as well.&lt;/p&gt;

&lt;p&gt;Some well-known plugins (I-known) are &lt;code&gt;OVS&lt;/code&gt;, &lt;code&gt;Linux Bridge&lt;/code&gt;, &lt;code&gt;NEC&lt;/code&gt;, &lt;code&gt;Midokura&lt;/code&gt;, &lt;code&gt;Contrail&lt;/code&gt;.&lt;/p&gt;

&lt;h2&gt;That&amp;#39;s the theorical design, now get back to the ugly earth&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;If hosts lay on multiple data centers (DCs), is the last model has any problems?&lt;/li&gt;
&lt;li&gt;All models above can use one or two or three NICs. Idealy, they want to separate management network with the network we are discussing. But what if we have only one NIC?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on &lt;a href=&quot;http://docs.openstack.org/trunk/openstack-ops/content/network_design.html&quot;&gt;this&lt;/a&gt;, A management network (a separate network for use by your cloud operators), typically consisting of a separate switch and separate NICs (network interface cards), is a recommended option. This segregation prevents system administration and the monitoring of system access from being disrupted by traffic generated by guests. What we were talking above is Data Network between guests.&lt;/p&gt;
</description>
				<pubDate>Tue, 15 Apr 2014 15:52:47 +0200</pubDate>
				<link>/openstack/networking/2014/04/15/OpenStack-networking-notes.html</link>
				<guid isPermaLink="true">/openstack/networking/2014/04/15/OpenStack-networking-notes.html</guid>
			</item>
		
	</channel>
</rss>
