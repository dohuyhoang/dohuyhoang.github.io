---
layout: post
title:  "OpenStack networking designs notes"
date:   2014-04-15 13:52:47
comments: true
categories: OpenStack Networking
---

# OpenStack networking designs

Based on this [slice](http://www.slideshare.net/lowescott/an-introduction-to-openstack-networking) of Scott Lowe and my testing results.

## What should we know about OpenStack networking

There are two types of network in OpenStack Neutron:
 
 * **Provider network**: or physical network inside/between DCs. Possible designs:
    * Flat (untagged): all hosts in the same network domain.
    * VLAN (tagged): separate physical broadcast domain by using tagged switch.
 * **Tenant network**: logical network between VMs. Both methods below support separated network.
    * GRE (unique id)
    * VLAN (tagged)
At least one Provider network must be configured.  

[Network concepts](http://developer.rackspace.com/blog/neutron-networking-the-building-blocks-of-an-openstack-cloud.html)

## Deployment models

### Flat network 

**How:**

* The most simple deployment.
* Use only one provider network. 
* Don't use any tenant network at all. All tenants share an IP pool.
* VMs get IPs directly from provider network.
* No need any neutron function.

**Good:**

* Simple, can use for testing

**Bad:**

* One broadcast domain. 
* Sniffing packets of other tenants.

### Multiple flat network

**How:**

* Use VLAN (need physical switch support) to separate Provider networks.
* Multiple providers networks
* **Note:** one VM can lay on two VLAN by configuring two IPs for it.

**Good:**

* Network separation between tenant. Congrat!
* Multiple broadcast domains

**Bad:**

* Need hardware configuration (Switch)
* Scaling needs configuring HW (create new VLAN)
* Creating new tenant networks needs configuring HW (omg T.T)

### Mixed flat and private network

**How:**

* Based on one flat network model: one provider network.
* Don't use Neutron router. 
* Each VM has private IP.
* Traffic is encapsulate for tenant network communication. Ensure the security, but the broadcast domain is not separated.
* They may use some Linux Bridge/IPSec technologies, I'm not sure.


### One Neutron router in front of private (tenant) networks

**How:**

* Based on Mixed flat and private network, no use physical switch (physical VLAN)
* Put a Neutron router (virtual router) in front of private networks.

**Good:**

* Separate traffic between tenants

**Bad:**

* Each tenant has one private network. 
* Tenant may create two private networks, but there traffic is not separated.
* Now we separate the term tenant and private network: one tenant in OpenStack equivalent with a project. One project may need more than one users working on. So each tenant may need several private networks.

### Each tenant has one Neutron router

**How:**

* The headline already describes it

**Good:**

* Separate traffic between tenants
* Separate traffic between private network inside tenants

**Ugly:**

* Don't know yet, I'm on the way of testing

## Nova-network vs Neutron network

Among all networking models above, nova-network only support the two first: flat and multiple-flat (VLAN). Obviously, it can't support any models with `neutron` name inside. If we choose to use nova-network, be ready to face scaling problem later. In addition, it won't support plugin-in mechadism to use third parties solutions. I don't recommend to use it unless you want to do a school project and want to save time to play video game. 

With Neutron, you have full network virtualization solution. The network is decoupled with hardware. Neutron uses an open-source product that's called Open vSwitch. When configuring Neutron, you will usually see the term OVS.   

![OVS](/assets/media/neutron1.jpg "http://www.slideshare.net/yfauser/open-stack-networking101part1")

Note that Neutron uses plugin mechanism. That means neutron itself only define the services - L2 network abstraction - then the plugins will provides the implementation. Third parties plugins may provides some extend functions as well.

Some well-known plugins (I-known) are `OVS`, `Linux Bridge`, `NEC`, `Midokura`, `Contrail`.

## That's the theorical design, now get back to the ugly earth

* If hosts lay on multiple data centers (DCs), is the last model has any problems?
* All models above can use one or two or three NICs. Idealy, they want to separate management network with the network we are discussing. But what if we have only one NIC?

Based on [this](http://docs.openstack.org/trunk/openstack-ops/content/network_design.html), A management network (a separate network for use by your cloud operators), typically consisting of a separate switch and separate NICs (network interface cards), is a recommended option. This segregation prevents system administration and the monitoring of system access from being disrupted by traffic generated by guests. What we were talking above is Data Network between guests.
